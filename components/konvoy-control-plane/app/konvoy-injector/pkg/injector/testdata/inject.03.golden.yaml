apiVersion: v1
kind: Pod
metadata:
  annotations:
    getkonvoy.io/mesh: default
    getkonvoy.io/sidecar-injected: "true"
    getkonvoy.io/transparent-proxying: enabled
    getkonvoy.io/transparent-proxying-port: "15001"
  creationTimestamp: null
  generateName: coredns-fb8b8dccf-
  labels:
    k8s-app: kube-dns
    pod-template-hash: fb8b8dccf
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: coredns-fb8b8dccf
    uid: 844452a6-aec8-11e9-9753-0242ac110002
spec:
  containers:
  - args:
    - -conf
    - /etc/coredns/Corefile
    image: k8s.gcr.io/coredns:1.3.1
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: /health
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    name: coredns
    ports:
    - containerPort: 53
      name: dns
      protocol: UDP
    - containerPort: 53
      name: dns-tcp
      protocol: TCP
    - containerPort: 9153
      name: metrics
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /health
        port: 8080
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits:
        memory: 170Mi
      requests:
        cpu: 100m
        memory: 70Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_BIND_SERVICE
        drop:
        - all
      procMount: Default
      readOnlyRootFilesystem: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/coredns
      name: config-volume
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: coredns-token-9gmrh
      readOnly: true
  - env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: INSTANCE_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: KONVOY_CONTROL_PLANE_XDS_SERVER_ADDRESS
      value: konvoy-control-plane.konvoy-system
    - name: KONVOY_CONTROL_PLANE_XDS_SERVER_PORT
      value: "5678"
    - name: KONVOY_MESH
      value: default
    - name: KONVOY_DATAPLANE_ID
      value: $(POD_NAME).$(POD_NAMESPACE).$(KONVOY_MESH)
    - name: KONVOY_DATAPLANE_SERVICE
      value: $(POD_NAME).$(POD_NAMESPACE).$(KONVOY_MESH)
    image: konvoy/konvoy-sidecar:latest
    imagePullPolicy: IfNotPresent
    livenessProbe:
      exec:
        command:
        - wget
        - -qO-
        - http://localhost:9901
    name: konvoy-sidecar
    readinessProbe:
      exec:
        command:
        - wget
        - -qO-
        - http://localhost:9901
    resources:
      limits:
        cpu: 50m
        memory: 64M
    securityContext:
      runAsGroup: 5678
      runAsUser: 5678
  dnsPolicy: Default
  enableServiceLinks: true
  initContainers:
  - args:
    - -p
    - "15001"
    - -u
    - "5678"
    - -g
    - "5678"
    - -m
    - REDIRECT
    - -i
    - '*'
    - -b
    - '*'
    image: konvoy/konvoy-init:latest
    imagePullPolicy: IfNotPresent
    name: konvoy-init
    resources:
      limits:
        cpu: 100m
        memory: 50M
      requests:
        cpu: 10m
        memory: 10M
    securityContext:
      capabilities:
        add:
        - NET_ADMIN
  nodeSelector:
    beta.kubernetes.io/os: linux
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: coredns
  serviceAccountName: coredns
  terminationGracePeriodSeconds: 30
  tolerations:
  - key: CriticalAddonsOnly
    operator: Exists
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - configMap:
      defaultMode: 420
      items:
      - key: Corefile
        path: Corefile
      name: coredns
    name: config-volume
  - name: coredns-token-9gmrh
    secret:
      secretName: coredns-token-9gmrh
status: {}
